name: 一時的な権限付与

on:
  push:
    branches:
      - main
    paths:
      - 'request.csv'
  workflow_dispatch:

jobs:
  add-permissions:
    runs-on: ubuntu-latest
    steps:
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v3

      - name: Pythonをセットアップ
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 必要なパッケージをインストール
        run: |
          python -m pip install --upgrade pip
          pip install pandas PyGithub python-dateutil

      - name: 権限を付与
        env:
          GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}
        id: add-permissions
        run: |
          python .github/scripts/add_permissions.py > output.txt
          echo "result=$(cat output.txt)" >> $GITHUB_OUTPUT

      - name: 結果を通知
        if: always()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const result = fs.readFileSync('output.txt', 'utf8');
            
            const commit = context.payload.head_commit;
            let committer = '';
            if (commit) {
              committer = commit.committer.username;
            }
            
            const issueComment = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number || (await github.rest.repos.listPullRequestsAssociatedWithCommit({
                owner: context.repo.owner,
                repo: context.repo.repo,
                commit_sha: context.sha
              })).data[0]?.number,
              body: `## 権限付与の結果\n\n${result}\n\n@${committer}`
            };
            
            if (issueComment.issue_number) {
              github.rest.issues.createComment(issueComment);
            } else {
              github.rest.repos.createCommitComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                commit_sha: context.sha,
                body: `## 権限付与の結果\n\n${result}\n\n@${committer}`
              });
            }