name: 一時的な権限付与

on:
  pull_request_review:
    types: [submitted]
  workflow_dispatch:

jobs:
  add-permissions:
    runs-on: ubuntu-latest
    # PRが承認された場合のみ実行
    if: github.event.review.state == 'approved' && startsWith(github.event.pull_request.head.ref, 'request/')
    steps:
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.ADMIN_TOKEN }}
          ref: ${{ github.event.pull_request.head.sha }}

      - name: PRをマージ
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          gh pr merge $PR_NUMBER --merge --delete-branch
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_TOKEN }}

      - name: Pythonをセットアップ
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 必要なパッケージをインストール
        run: |
          python -m pip install --upgrade pip
          pip install pandas PyGithub python-dateutil

      - name: 権限を付与
        env:
          GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}
        id: add-permissions
        run: |
          python .github/scripts/add_permissions.py | tee output_log.txt
          
      - name: 結果を保存
        run: |
          grep "^成功\|^エラー" output_log.txt > output_summary.txt || true
          
      - name: 結果をアーティファクトとして保存
        uses: actions/upload-artifact@v4
        with:
          name: execution-results
          path: |
            output_log.txt
            output_summary.txt
          retention-days: 90
          
      - name: 台帳をリポジトリにコミット
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add permissions_ledger.csv
          git commit -m "台帳を更新 [skip ci]" || echo "変更なし"
          git push origin HEAD:main
          
      - name: Issueに通知
        run: |
          # PRの本文からIssue番号を抽出
          PR_BODY="${{ github.event.pull_request.body }}"
          if [[ $PR_BODY =~ Issue\ #([0-9]+) ]]; then
            ISSUE_NUMBER=${BASH_REMATCH[1]}
            
            # 結果の要約を取得
            if [ -f "output_summary.txt" ]; then
              RESULT=$(cat output_summary.txt)
            else
              RESULT="結果の詳細が見つかりません"
            fi
            
            # Issueにコメント
            SUCCESS_MSG="## 権限付与が完了しました ✅
            
            ### 処理結果:
            \`\`\`
            $RESULT
            \`\`\`
            
            権限が正常に付与されました。"
            
            gh issue comment "$ISSUE_NUMBER" --body "$SUCCESS_MSG"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_TOKEN }}